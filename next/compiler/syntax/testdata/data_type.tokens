TYPE:type
IDENT:Num
ASSIGN:=
NEWLINE:
CASE:case
IDENT:Integer
LBRACE:{
IDENT:_
RBRACE:}
NEWLINE:
CASE:case
IDENT:Rational
LBRACE:{
NEWLINE:
IDENT:denom
COLON::
IDENT:int
NEWLINE:
IDENT:num
COLON::
IDENT:int
NEWLINE:
RBRACE:}
NEWLINE:
CASE:case
IDENT:Complex
LBRACE:{
IDENT:real
COMMA:,
IDENT:imag
RBRACE:}
NEWLINE:
NEWLINE:
FUNC:func
IDENT:main
NEWLINE:
LET:let
IDENT:i
ASSIGN:=
IDENT:Num
COLON_COLON:::
IDENT:Integer
LPAREN:(
INT:12
RPAREN:)
NEWLINE:
LET:let
IDENT:r
ASSIGN:=
IDENT:Num
COLON_COLON:::
IDENT:Rational
LPAREN:(
INT:3
COMMA:,
INT:5
RPAREN:)
NEWLINE:
LET:let
IDENT:c1
ASSIGN:=
IDENT:Complex
LPAREN:(
INT:3
COMMA:,
INT:10
RPAREN:)
NEWLINE:
LET:let
IDENT:c2
ASSIGN:=
IDENT:Complex
LBRACE:{
IDENT:real
COLON::
FLOAT:3.0
COMMA:,
IDENT:imag
COLON::
FLOAT:10.0
RBRACE:}
NEWLINE:
END:end
NEWLINE:
EOF:
